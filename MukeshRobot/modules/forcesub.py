import logging
import time

from pyrogram import filters
from pyrogram.errors.exceptions.bad_request_400 import (
    ChatAdminRequired,
    PeerIdInvalid,
    UsernameNotOccupied,
    UserNotParticipant,
)
from pyrogram.types import ChatPermissions, InlineKeyboardButton, InlineKeyboardMarkup

from MukeshRobot import DRAGONS as SUDO_USERS
from MukeshRobot import pbot
from MukeshRobot.modules.sql import forceSubscribe_sql as sql


logging.basicConfig(level=logging.INFO)

static_data_filter = filters.create(
    lambda _, __, query: query.data == "onUnMuteRequest"
)


@pbot.on_callback_query(static_data_filter)
def _onUnMuteRequest(client, cb):
    user_id = cb.from_user.id
    chat_id = cb.message.chat.id
    chat_db = sql.fs_settings(chat_id)
    if chat_db:
        channel = chat_db.channel
        chat_member = client.get_chat_member(chat_id, user_id)
        if chat_member.restricted_by:
            if chat_member.restricted_by.id == (client.get_me()).id:
                try:
                    client.get_chat_member(channel, user_id)
                    client.unban_chat_member(chat_id, user_id)
                    cb.message.delete()
                    # if cb.message.reply_to_message.from_user.id == user_id:
                    # cb.message.delete()
                except UserNotParticipant:
                    client.answer_callback_query(
                        cb.id,
                        text=f"¬ª ·¥ä·¥è…™…¥ @{channel} ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥Ä…¥·¥Ö ·¥õ ú·¥á…¥ ·¥© Ä·¥áss '·¥ú…¥·¥ç·¥ú·¥õ·¥á ·¥ç·¥á'  ô·¥ú·¥õ·¥õ·¥è…¥.",
                        show_alert=True,
                    )
            else:
                client.answer_callback_query(
                    cb.id,
                    text="¬ª  è·¥è·¥ú ·¥Ä Ä·¥á ·¥ç·¥ú·¥õ·¥á·¥Ö  ô è ·¥Ä·¥Ö·¥ç…™…¥s “ì·¥è Ä ·¥Ä…¥·¥è·¥õ ú·¥á Ä  Ä·¥á·¥Äs·¥è…¥ s·¥è …™ ·¥Ñ·¥Ä…¥'·¥õ ·¥ú…¥·¥ç·¥ú·¥õ·¥á  è·¥è·¥ú.",
                    show_alert=True,
                )
        else:
            if (
                not client.get_chat_member(chat_id, (client.get_me()).id).status
                == "administrator"
            ):
                client.send_message(
                    chat_id,
                    f"¬ª **{cb.from_user.mention} …™s ·¥õ Ä è…™…¥…¢ ·¥õ·¥è ·¥ú…¥·¥ç·¥ú·¥õ·¥á  ú…™·¥çs·¥á ü“ì  ô·¥ú·¥õ …™ ·¥Ñ·¥Ä…¥'·¥õ ·¥ú…¥·¥ç·¥ú·¥õ·¥á  ú…™·¥ç  ô·¥á·¥Ñ·¥Ä·¥ús·¥á …™'·¥ç …¥·¥è·¥õ ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**\n__# ü·¥á·¥Ä·¥†…™…¥…¢ ·¥Ñ ú·¥Ä·¥õ...__",
                )

            else:
                client.answer_callback_query(
                    cb.id,
                    text="¬ª ·¥°·¥Ä Ä…¥…™…¥…¢ ! ·¥Ö·¥è…¥'·¥õ ·¥© Ä·¥áss ·¥õ ú·¥á ·¥ú…¥·¥ç·¥ú·¥õ·¥á  ô·¥ú·¥õ·¥õ·¥è…¥ ·¥° ú·¥á…¥  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥õ·¥Ä ü·¥ã.",
                    show_alert=True,
                )


@pbot.on_message(filters.text & ~filters.private & ~filters.edited, group=1)
def _check_member(client, message):
    chat_id = message.chat.id
    chat_db = sql.fs_settings(chat_id)
    if chat_db:
        user_id = message.from_user.id
        if (
            not client.get_chat_member(chat_id, user_id).status
            in ("administrator", "creator")
            and not user_id in SUDO_USERS
        ):
            channel = chat_db.channel
            try:
                client.get_chat_member(channel, user_id)
            except UserNotParticipant:
                try:
                    sent_message = message.reply_text(
                        " ú·¥á è {} üíî \n ** è·¥è·¥ú  ú·¥Ä·¥†·¥á…¥'·¥õ ·¥ä·¥è…™…¥·¥á·¥Ö @{} ·¥Ñ ú·¥Ä…¥…¥·¥á ü  è·¥á·¥õ**üßê \n \n·¥© ü·¥á·¥Äs·¥á ·¥ä·¥è…™…¥ [·¥õ ú…™s ·¥Ñ ú·¥Ä…¥…¥·¥á ü](https://t.me/{}) ·¥Ä…¥·¥Ö ·¥õ ú·¥á…¥ ·¥© Ä·¥áss ·¥õ ú·¥á **·¥ú…¥·¥ç·¥ú·¥õ·¥á ·¥ç·¥á**  ô·¥ú·¥õ·¥õ·¥è…¥. \n \n ".format(
                            message.from_user.mention, channel, channel
                        ),
                        disable_web_page_preview=True,
                        reply_markup=InlineKeyboardMarkup(
                            [
                                [
                                    InlineKeyboardButton(
                                        "‚Ä¢ ·¥Ñ ú·¥Ä…¥…¥·¥á ü ‚Ä¢",
                                        url="https://t.me/{}".format(channel),
                                    )
                                ],
                                [
                                    InlineKeyboardButton(
                                        "‚Ä¢ ·¥ú…¥·¥ç·¥ú·¥õ·¥á ·¥ç·¥á ‚Ä¢", callback_data="onUnMuteRequest"
                                    )
                                ],
                            ]
                        ),
                    )
                    client.restrict_chat_member(
                        chat_id, user_id, ChatPermissions(can_send_messages=False)
                    )
                except ChatAdminRequired:
                    sent_message.edit(
                        "üòï **…™'·¥ç …¥·¥è·¥õ ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥  ú·¥á Ä·¥á...**\n__…¢…™·¥†·¥á ·¥ç·¥á ·¥©·¥á Ä·¥ç…™ss…™·¥è…¥s ·¥õ·¥è  ô·¥Ä…¥ ·¥ús·¥á Äs ·¥Ä…¥·¥Ö ·¥õ ú·¥á…¥ ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥... \n#·¥á…¥·¥Ö…™…¥…¢ “ìs·¥ú ô...__"
                    )

            except ChatAdminRequired:
                client.send_message(
                    chat_id,
                    text=f"üòï **…™'·¥ç …¥·¥è·¥õ ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ …™…¥ @{channel} ·¥Ñ ú·¥Ä…¥…¥·¥á ü.**\n__·¥© Ä·¥è·¥ç·¥è·¥õ·¥á ·¥ç·¥á ·¥Äs ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ …™…¥ ·¥õ ú·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü.\n#·¥á…¥·¥Ö…™…¥…¢ “ìs·¥ú ô...__",
                )


@pbot.on_message(filters.command(["forcesubscribe", "fsub"]) & ~filters.private)
def config(client, message):
    user = client.get_chat_member(message.chat.id, message.from_user.id)
    if user.status == "creator" or user.user.id in SUDO_USERS:
        chat_id = message.chat.id
        if len(message.command) > 1:
            input_str = message.command[1]
            input_str = input_str.replace("@", "")
            if input_str.lower() in ("off", "no", "disable"):
                sql.disapprove(chat_id)
                message.reply_text("**¬ª s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö “ì·¥è Ä·¥Ñ·¥á s·¥ú ôs·¥Ñ Ä…™ ô·¥á.**")
            elif input_str.lower() in ("clear"):
                sent_message = message.reply_text(
                    "**¬ª ·¥ú…¥·¥ç·¥ú·¥õ…™…¥…¢ ·¥Ä ü ü ·¥ç·¥á·¥ç ô·¥á Äs ·¥ç·¥ú·¥õ·¥á·¥Ö  ô è …¥·¥è·¥õ ·¥ä·¥è…™…¥…™…¥…¢ ·¥õ ú·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü...**"
                )
                try:
                    for chat_member in client.get_chat_members(
                        message.chat.id, filter="restricted"
                    ):
                        if chat_member.restricted_by.id == (client.get_me()).id:
                            client.unban_chat_member(chat_id, chat_member.user.id)
                            time.sleep(1)
                    sent_message.edit(
                        "**¬ª ·¥ú…¥·¥ç·¥ú·¥õ·¥á·¥Ö ·¥Ä ü ü ·¥ç·¥á·¥ç ô·¥á Äs ·¥° ú·¥è ·¥Ä Ä·¥á ·¥ç·¥ú·¥õ·¥á·¥Ö  ô è ·¥ç·¥á “ì·¥è Ä …¥·¥è·¥õ ·¥ä·¥è…™…¥…™…¥…¢ ·¥õ ú·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü.**"
                    )
                except ChatAdminRequired:
                    sent_message.edit(
                        "üòï **…™'·¥ç …¥·¥è·¥õ ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**\n__…™ ·¥Ñ·¥Ä…¥'·¥õ ·¥ú…¥·¥ç·¥ú·¥õ·¥á ·¥ç·¥á·¥ç ô·¥á Äs  ô·¥á·¥Ñ·¥Ä·¥ús·¥á …™ ·¥Ö·¥è…¥'·¥õ  ú·¥Ä·¥†·¥á ·¥©·¥á Ä·¥ç…™ss…™·¥è…¥s ·¥õ·¥è ·¥ç·¥ú·¥õ·¥á/·¥ú…¥·¥ç·¥ú·¥õ·¥á ·¥ús·¥á Äs …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.__"
                    )
            else:
                try:
                    client.get_chat_member(input_str, "me")
                    sql.add_channel(chat_id, input_str)
                    message.reply_text(
                        f"**¬ª “ì·¥è Ä·¥Ñ·¥á s·¥ú ôs·¥Ñ Ä…™ ô·¥á ·¥á…¥·¥Ä ô ü·¥á·¥Ö s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è**\n__“ì·¥è Ä·¥Ñ·¥á s·¥ú ô ·¥á…¥·¥Ä ô ü·¥á·¥Ö, ·¥Ä ü ü ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥© ·¥ç·¥á·¥ç ô·¥á Äs  ú·¥Ä·¥†·¥á ·¥õ·¥è s·¥ú ôs·¥Ñ Ä…™ ô·¥á ·¥õ ú…™s [·¥Ñ ú·¥Ä…¥…¥·¥á ü](https://t.me/{input_str}) “ì·¥è Ä s·¥á…¥·¥Ö…™…¥…¢ ·¥ç·¥áss·¥Ä…¢·¥ás …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.__",
                        disable_web_page_preview=True,
                    )
                except UserNotParticipant:
                    message.reply_text(
                        f"üòï **…™'·¥ç …¥·¥è·¥õ ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ …™…¥ ·¥õ ú·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü**\n__·¥© Ä·¥è·¥ç·¥è·¥õ·¥á ·¥ç·¥á ·¥Äs ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ …™…¥ ·¥õ ú·¥á [·¥Ñ ú·¥Ä…¥…¥·¥á ü](https://t.me/{input_str}) ·¥õ·¥è ·¥á…¥·¥Ä ô ü·¥á “ì·¥è Ä·¥Ñ·¥á s·¥ú ôs·¥Ñ Ä…™ ô·¥á.__",
                        disable_web_page_preview=True,
                    )
                except (UsernameNotOccupied, PeerIdInvalid):
                    message.reply_text(f"**¬ª …™…¥·¥†·¥Ä ü…™·¥Ö ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á.**")
                except Exception as err:
                    message.reply_text(f"**·¥á Ä Ä·¥è Ä:** ```{err}```")
        else:
            if sql.fs_settings(chat_id):
                message.reply_text(
                    f"**¬ª “ì·¥è Ä·¥Ñ·¥á s·¥ú ô …™s ·¥á…¥·¥Ä ô ü·¥á·¥Ö.**\n__“ì·¥è Ä ·¥õ ú…™s [·¥Ñ ú·¥Ä…¥…¥·¥á ü](https://t.me/{sql.fs_settings(chat_id).channel})__",
                    disable_web_page_preview=True,
                )
            else:
                message.reply_text("**¬ª “ì·¥è Ä·¥Ñ·¥á s·¥ú ô …™s ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**")
    else:
        message.reply_text(
            "**¬ª ·¥è…¥ ü è ·¥õ ú·¥á ·¥è·¥°…¥·¥á Ä ·¥è“ì ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ ·¥Ñ·¥Ä…¥ ·¥á…¥·¥Ä ô ü·¥á “ì·¥è Ä·¥Ñ·¥á s·¥ú ôs·¥Ñ Ä…™ ô·¥á.**"
        )


__help__ = """
  *Force Subscribe:*

  Fallen Robot can mute members who are not subscribed your channel until they subscribe When enabled I will mute unsubscribed members and show them a unmute button. When they pressed the button I will unmute them

  *Setup* *:* *Only for chat owner*
  ‚ùç Add me in your group as admin
  ‚ùç Add me in your channel as admin 
    
  *Commmands*
  ‚ùç /fsub {channel username} *:* To turn on and setup the channel.

    üí°Do this first...

  ‚ùç /fsub *:* To get the current settings.
  ‚ùç /fsub disable *:* To turn of ForceSubscribe..

    üí°If you disable fsub, you need to set again for working.. /fsub {channel username} 

  ‚ùç /fsub clear *:* To unmute all members who are muted by me for not joining the channel.
"""
__mod_name__ = "üîíF·¥è Ä·¥Ñ·¥á-S·¥ú ôüîí"
